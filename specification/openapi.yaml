openapi: 3.0.3
info:
  title: Tasks service API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: Get all tasks
      operationId: getAllTasks
      responses:
        '200':
          description: A list of all tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTaskDto'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a new task
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskDto'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '500':
          $ref: '#/components/responses/InternalServerError'
  /tasks/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
    patch:
      summary: Patch task
      operationId: patchTask
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskDto'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: deleteTask
      description: Delete a task
      responses:
        '201':
          content: {}
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/signup:
    post:
      description: Create a user
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
  /auth/login:
    post:
      operationId: logIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserDto'
      responses:
        '200':
          headers:
            access_token:
              description: Access token
              schema:
                type: string
            refresh_token:
              description: Refresh token
              schema:
                type: string
          content: {}
  /auth/me:
    securitySchemes:
      $ref: ../components/security.yaml#/bearerAuth
    get:
      '200':
        content:
          application/json:
            schema:
              $ref: ../components/schemas.yaml#/GetUserDto
      operationId: getUserInfo
      responses: null
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        full_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        city:
          type: string
      required:
        - full_name
        - email
        - password
    LoginUserDto:
      type: object
      properties:
        full_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - full_name
        - password
        - email
    Tag:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    GetTaskDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
        deadline:
          type: string
          format: date
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        weather:
          type: string
        user_id:
          type: string
      required:
        - name
        - user_id
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error
    CreateTaskDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        deadline:
          type: string
          format: date
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        user_id:
          type: integer
      required:
        - name
        - user_id
    GetUserDto:
      type: object
      properties:
        full_name:
          type: string
        email:
          type: string
          format: email
        city:
          type: string
      required:
        - full_name
        - email
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
